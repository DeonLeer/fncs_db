DROP TABLE IF EXISTS players CASCADE;
CREATE TABLE players (
  id SERIAL PRIMARY KEY NOT NULL,
  name varchar(255) NOT NULL
);
DROP TABLE IF EXISTS regions CASCADE;
CREATE TABLE regions (
  id SERIAL PRIMARY KEY NOT NULL,
  name varchar(255) NOT NULL
);
DROP TABLE IF EXISTS seasons CASCADE;
CREATE TABLE seasons (
  id SERIAL PRIMARY KEY NOT NULL,
  season INTEGER NOT NULL
);
DROP TABLE IF EXISTS types CASCADE;
CREATE TABLE types (
  id SERIAL PRIMARY KEY NOT NULL,
  name varchar(255) NOT NULL,
  season_id INTEGER REFERENCES seasons(id) ON DELETE CASCADE,
  region_id INTEGER REFERENCES regions(id) ON DELETE CASCADE
);
DROP TABLE IF EXISTS tournaments CASCADE;
CREATE TABLE tournaments (
  id SERIAL PRIMARY KEY NOT NULL,
  name varchar(255) NOT NULL,
  type INTEGER REFERENCES types(id) ON DELETE CASCADE
);
DROP TABLE IF EXISTS duos CASCADE;
CREATE TABLE duos (
  id SERIAL PRIMARY KEY NOT NULL,
  player1_id INTEGER REFERENCES players(id) ON DELETE CASCADE,
  player2_id INTEGER REFERENCES players(id) ON DELETE CASCADE
);
DROP TABLE IF EXISTS squads CASCADE;
CREATE TABLE squads (
  id SERIAL PRIMARY KEY NOT NULL,
  player1_id INTEGER REFERENCES players(id) ON DELETE CASCADE,
  player2_id INTEGER REFERENCES players(id) ON DELETE CASCADE,
  player3_id INTEGER REFERENCES players(id) ON DELETE CASCADE,
  player4_id INTEGER REFERENCES players(id) ON DELETE CASCADE  
);
DROP TABLE IF EXISTS solo_games CASCADE;
CREATE TABLE solo_games (
  id SERIAL PRIMARY KEY NOT NULL,
  number INTEGER NOT NULL,
  tournament_id INTEGER REFERENCES tournaments(id) ON DELETE CASCADE
);
DROP TABLE IF EXISTS duo_games CASCADE;
CREATE TABLE duo_games (
  id SERIAL PRIMARY KEY NOT NULL,
  number INTEGER NOT NULL,
  tournament_id INTEGER REFERENCES tournaments(id) ON DELETE CASCADE
);
DROP TABLE IF EXISTS trio_games CASCADE;
CREATE TABLE trio_games (
  id SERIAL PRIMARY KEY NOT NULL,
  number INTEGER NOT NULL,
  tournament_id INTEGER REFERENCES tournaments(id) ON DELETE CASCADE
);
DROP TABLE IF EXISTS squad_games CASCADE;
CREATE TABLE squad_games (
  id SERIAL PRIMARY KEY NOT NULL,
  number INTEGER NOT NULL,
  tournament_id INTEGER REFERENCES tournaments(id) ON DELETE CASCADE
);
DROP TABLE IF EXISTS solo_games_played CASCADE;
CREATE TABLE solo_games_played (
  id SERIAL PRIMARY KEY NOT NULL,
  player_id INTEGER REFERENCES trios(id) ON DELETE CASCADE,
  game_id INTEGER REFERENCES games(id) ON DELETE CASCADE
);
DROP TABLE IF EXISTS duo_games_played CASCADE;
CREATE TABLE duo_games_played (
  id SERIAL PRIMARY KEY NOT NULL,
  duo_id INTEGER REFERENCES trios(id) ON DELETE CASCADE,
  game_id INTEGER REFERENCES games(id) ON DELETE CASCADE
);
DROP TABLE IF EXISTS trio_games_played CASCADE;
CREATE TABLE trio_games_played (
  id SERIAL PRIMARY KEY NOT NULL,
  trio_id INTEGER REFERENCES trios(id) ON DELETE CASCADE,
  game_id INTEGER REFERENCES games(id) ON DELETE CASCADE
);
DROP TABLE IF EXISTS squad_games_played CASCADE;
CREATE TABLE squad_games_played (
  id SERIAL PRIMARY KEY NOT NULL,
  trio_id INTEGER REFERENCES trios(id) ON DELETE CASCADE,
  game_id INTEGER REFERENCES games(id) ON DELETE CASCADE
);
DROP TABLE IF EXISTS eliminations CASCADE;
CREATE TABLE eliminations (
  id SERIAL PRIMARY KEY NOT NULL,
  player_eliminated_id INTEGER REFERENCES players(id) ON DELETE CASCADE,
  player_elimination_id INTEGER REFERENCES players(id) ON DELETE CASCADE,
  game_id INTEGER REFERENCES games(id) ON DELETE CASCADE,
  time INTEGER
);